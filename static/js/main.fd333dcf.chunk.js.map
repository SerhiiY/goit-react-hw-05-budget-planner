{"version":3,"sources":["components/shared/Form.jsx","components/shared/Label.jsx","components/shared/Input.jsx","components/shared/Button.jsx","components/redux/actions.js","components/BudgetForm.jsx","components/ExpenseForm.jsx","components/ExpensesTable.jsx","components/Value.jsx","components/Values.jsx","components/App.jsx","components/redux/budgetReducer.js","components/redux/expensesReducer.js","components/redux/balanceReducer.js","components/redux/store.js","index.js"],"names":["StyledForm","styled","form","Form","onSubmit","children","StyledLabel","label","props","customStyles","Label","StyledInput","input","Input","type","onChange","name","StyledButton","button","Button","onClick","Type","connect","state","dispatch","onSave","value","payload","inputValue","e","preventDefault","toast","error","target","reset","balance","expense","amount","id","shortid","generate","actions","handleChange","placeholder","Table","table","ExpensesTable","expenses","onRemove","map","key","defaultProps","Container","div","isPositive","p","Amount","Value","section","Values","budget","setBalance","totalExpenses","reduce","total","calculateTotalExpenses","expences","App","length","position","autoClose","budgetReducer","action","currentExpenseReducer","filter","rootReducer","combineReducers","expensesReducer","balanceReducer","store","createStore","devToolsEnhancer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fd333dcf.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledForm = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 16px;\r\n  width: 100%;\r\n  border-radius: 2px;\r\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\r\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\r\n`;\r\n\r\nconst Form = ({ onSubmit = () => null, children }) => (\r\n  <StyledForm onSubmit={onSubmit}>{children}</StyledForm>\r\n);\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledLabel = styled.label`\r\n  display: inline-block;\r\n  font-size: 20px;\r\n  color: #171718;\r\n  cursor: pointer;\r\n  ${props => props.customStyles}\r\n`;\r\n\r\nconst Label = ({ children, customStyles }) => (\r\n  <StyledLabel customStyles={customStyles}>{children}</StyledLabel>\r\n);\r\n\r\nexport default Label;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledInput = styled.input`\r\n  color: #171718;\r\n  font: inherit;\r\n  font-size: 1.2rem;\r\n  padding: 16px;\r\n  border-radius: 4px;\r\n  border: 1px solid #bdbdbd;\r\n  width: 100%;\r\n  outline: 0;\r\n\r\n  &:focus {\r\n    border: 1px solid #2b32b2;\r\n  }\r\n`;\r\n\r\nconst Input = ({\r\n  type = \" text\",\r\n  onChange = () => null,\r\n  name = \"\"\r\n}) => <StyledInput type={type} onChange={onChange} name={name} />;\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledButton = styled.button`\r\n  display: inline-flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: #fff;\r\n  background-color: #3f51b5;\r\n  border: 0;\r\n  outline: 0;\r\n  padding: 8px 24px;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  box-shadow: 0px 2px 1px 1px rgba(0, 0, 0, 0.05);\r\n  font: inherit;\r\n  text-transform: uppercase;\r\n  user-select: none;\r\n\r\n  transition: background-color 200ms ease-in-out;\r\n\r\n  &:hover {\r\n    box-shadow: 0px 2px 1px 1px rgba(0, 0, 0, 0.15);\r\n    background-color: #303f9f;\r\n  }\r\n`;\r\n\r\nconst Button = ({ type = \"button\", label = \"\", onClick = () => null }) => (\r\n  <StyledButton type={type} onClick={onClick}>\r\n    {label}\r\n  </StyledButton>\r\n);\r\n\r\nexport default Button;\r\n","import shortid from 'shortid';\r\n\r\nexport const Type = {\r\n  ADD_EXPENSE: 'ADD_EXPENSE',\r\n  REMOVE_EXPENSE: 'REMOVE_EXPENSE',\r\n  SET_BUDGET: 'SET_BUDGET',\r\n  SET_BALANCE: 'SET_BALANCE',\r\n};\r\n\r\nexport const setBudget = budget => ({\r\n  type: Type.SET_BUDGET,\r\n  payload: +budget,\r\n});\r\n\r\nexport const addExpense = ({ name, amount }) => {\r\n  const expense = {\r\n    id: shortid.generate(),\r\n    name,\r\n    amount: +amount,\r\n  };\r\n  return ({\r\n    type: Type.ADD_EXPENSE,\r\n    payload: expense,\r\n  })\r\n};\r\n\r\nexport const removeExpense = id => ({\r\n  type: Type.REMOVE_EXPENSE,\r\n  payload: id,\r\n});\r\n\r\nexport const setBalance = value => ({\r\n  type: Type.SET_BALANCE,\r\n  payload: value,\r\n})","import React from 'react';\r\nimport Form from './shared/Form';\r\nimport Label from './shared/Label';\r\nimport Input from './shared/Input';\r\nimport Button from './shared/Button';\r\n\r\nimport { toast } from 'react-toastify';\r\nimport { connect } from 'react-redux';  //redux\r\nimport * as actions from './redux/actions';  //redux\r\n\r\nconst labelStyles = `\r\n  margin-bottom: 16px;  \r\n`;\r\n\r\nconst BudgetForm = ({ onSave }) => {\r\n  \r\n  let inputValue = 0;\r\n\r\n  const handleChange = ({ target: { value } }) => {\r\n    inputValue = value;\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if(inputValue <= 0) return toast.error(\"Enter correct number!\");\r\n    onSave(inputValue);\r\n    e.target.reset();\r\n  }\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <Label customStyles={labelStyles}>\r\n        Enter your total budget\r\n      <Input\r\n          type=\"number\"\r\n          onChange={handleChange}\r\n        />\r\n      </Label>\r\n\r\n      <Button label=\"Save\" type=\"submit\" />\r\n    </Form>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSave: value => dispatch(actions.setBudget(value)),\r\n})\r\n\r\n  export default connect(mapStateToProps, mapDispatchToProps)(BudgetForm);\r\n","import React from 'react';\r\nimport Form from './shared/Form';\r\nimport Label from './shared/Label';\r\nimport Input from './shared/Input';\r\nimport Button from './shared/Button';\r\n\r\nimport { toast } from 'react-toastify';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';  //redux\r\nimport * as actions from './redux/actions';  //redux\r\n\r\nconst labelStyles = `\r\n  margin-bottom: 16px;  \r\n`;\r\n\r\nconst ExpenseForm = ({ onSave, balance }) => {\r\n\r\n  const expense = {\r\n    name: '',\r\n    amount: 0,\r\n  }\r\n\r\n  const handleChange = ({ target: { name, value } }) => {\r\n    name === 'name' ? expense.name = value : expense.amount = value;\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { name, amount } = expense;\r\n    if (amount <= 0) return toast.error(\"Enter correct number!\");\r\n    if (!name) return toast.error(\"Enter correct expense name!\");\r\n    if (balance < amount) return toast.error(\"You don't have anough money\");\r\n    onSave(expense);\r\n    e.target.reset();\r\n  }\r\n    \r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <Label customStyles={labelStyles}>\r\n        Enter expense name\r\n          <Input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          placeholder='Enter expense name'\r\n          onChange={handleChange}\r\n        />\r\n      </Label>\r\n      <Label customStyles={labelStyles}>\r\n        Enter expense amount\r\n          <Input\r\n          type=\"number\"\r\n          name=\"amount\"\r\n          placeholder='Enter expense amount'\r\n          onChange={handleChange}\r\n        />\r\n      </Label>\r\n\r\n      <Button label=\"Add\" type=\"submit\" />\r\n    </Form>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  balance: state.balance,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSave: expense => dispatch(actions.addExpense(expense)),  \r\n})\r\n\r\nExpenseForm.propTypes = {\r\n  onSave: PropTypes.func,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ExpenseForm);\r\n  ","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Button from './shared/Button';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { connect } from 'react-redux'; //redux\r\nimport * as actions from './redux/actions';  //redux\r\n\r\nconst Table = styled.table`\r\n  border-collapse: collapse;\r\n  text-align: center;\r\n  width: 100%;\r\n\r\n  tr {\r\n    border-bottom: 1px solid #212121;\r\n  }\r\n\r\n  td,\r\n  th {\r\n    padding-top: 8px;\r\n    padding-bottom: 8px;\r\n  }\r\n`;\r\n\r\nconst ExpensesTable = ({ expenses, onRemove }) => (\r\n\r\n  <Table>\r\n    <thead>\r\n      <tr>\r\n        <th>Expense name</th>\r\n        <th>Expense amount</th>\r\n        <th />\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      {expenses.map(({ id, name, amount }) => (\r\n        <tr key={id}>\r\n          <td>{name}</td>\r\n          <td>{amount}</td>\r\n          <td>\r\n            <Button label=\"Delete\" name={id} onClick={() => onRemove(id)} />\r\n          </td>\r\n        </tr>\r\n      ))}\r\n    </tbody>\r\n  </Table>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  expenses: state.expenses,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onRemove: id => dispatch(actions.removeExpense(id)),\r\n})\r\n\r\nExpensesTable.propTypes = {\r\n  expeses: PropTypes.array,\r\n  onRemove: PropTypes.func,\r\n}\r\n\r\nExpensesTable.defaultProps = {\r\n  expenses: [],\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ExpensesTable);\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Container = styled.div`\r\n  text-align: center;\r\n  padding: 8px 24px;\r\n  color: ${props => (props.isPositive ? '#388E3C' : '#D32F2F')};\r\n  user-select: none;\r\n`;\r\n\r\nconst Label = styled.p`\r\n  margin-top: 0;\r\n  margin-bottom: 8px;\r\n  text-transform: uppercase;\r\n  font-weight: 500;\r\n  font-size: 24px;\r\n`;\r\n\r\nconst Amount = styled.p`\r\n  margin-top: 0;\r\n  margin-bottom: 0;\r\n  font-size: 48px;\r\n`;\r\n\r\nconst Value = ({ label, value, isPositive }) => (\r\n  <Container isPositive={isPositive}>\r\n    <Label>{label}</Label>\r\n    <Amount>{value}&nbsp;&#x24;</Amount>\r\n  </Container>\r\n);\r\n\r\nValue.propTypes = {\r\n  label: PropTypes.string,\r\n  value: PropTypes.number,\r\n  isPositive: PropTypes.bool,\r\n}\r\n\r\nValue.defaultProps = {\r\n  label: '',\r\n  value: 0,\r\n  isPositive: false,\r\n}\r\n\r\nexport default Value;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Value from './Value';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';  //redux\r\nimport * as actions from './redux/actions';  //redux\r\n\r\nconst Container = styled.section`\r\n  display: inline-flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nconst calculateTotalExpenses = expenses => \r\n  expenses.reduce((total, expense) => total + expense.amount, 0);\r\n\r\n\r\nconst Values = ({ budget, expenses, setBalance }) => {\r\n  const totalExpenses = calculateTotalExpenses(expenses);\r\n  const balance = budget - totalExpenses;\r\n  setBalance(balance);\r\n\r\nreturn (\r\n    <Container>\r\n      <Value label=\"Budget\" value={budget} isPositive />\r\n      <Value label=\"Expenses\" value={totalExpenses} />\r\n      <Value label=\"Balance\" value={balance} isPositive={balance >= 0} />\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  budget: state.budget,\r\n  expenses: state.expenses,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setBalance: value => dispatch(actions.setBalance(value)),\r\n})\r\n\r\nValues.propTypes = {\r\n  budget: PropTypes.number,\r\n  expenses: PropTypes.array,\r\n}\r\n\r\nValues.defaultProps = {\r\n  budget: 0,\r\n  expences: [],\r\n}\r\n  export default connect(mapStateToProps, mapDispatchToProps)(Values);","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport BudgetForm from \"./BudgetForm\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\nimport ExpensesTable from \"./ExpensesTable\";\r\nimport Values from \"./Values\";\r\n\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux'; //redux\r\n\r\n\r\nconst Container = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 340px 1fr;\r\n  align-items: flex-start;\r\n  grid-gap: 24px;\r\n  max-width: 960px;\r\n  padding-left: 16px;\r\n  padding-right: 16px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n`;\r\n\r\nconst App = ({ expenses }) => (\r\n  \r\n  <Container>\r\n    <BudgetForm />\r\n    <Values />\r\n    <ExpenseForm />\r\n    {expenses.length > 0 && (\r\n      <ExpensesTable />\r\n    )}\r\n    <ToastContainer\r\n      position=\"bottom-right\"\r\n      autoClose={3000}\r\n    />\r\n  </Container>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  expenses: state.expenses,\r\n})\r\n\r\nApp.propTypes = {\r\n  expenses: PropTypes.array,\r\n}\r\n\r\nApp.defaultProps = {\r\n  expenses: [],\r\n}\r\n\r\nexport default connect(mapStateToProps)(App);","import { Type } from './actions';\r\n\r\nconst budgetReducer = (state = 0, action) => {\r\n  switch (action.type) {\r\n    case Type.SET_BUDGET:\r\n      return action.payload;\r\n            \r\n    default: return state;\r\n  }\r\n}\r\n\r\nexport default budgetReducer; ","import { Type } from './actions';\r\n\r\nconst currentExpenseReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case Type.ADD_EXPENSE:\r\n      return [action.payload, ...state];\r\n\r\n      case Type.REMOVE_EXPENSE:\r\n    return state.filter(expense => expense.id !== action.payload);\r\n                \r\n    default: return state;\r\n  }\r\n}\r\n\r\nexport default currentExpenseReducer;","import { Type } from './actions';\r\n\r\nconst currentExpenseReducer = (state = 0, action) => {\r\n  switch (action.type) {\r\n    case Type.SET_BALANCE:\r\n      return action.payload;\r\n                \r\n    default: return state;\r\n  }\r\n}\r\n\r\nexport default currentExpenseReducer;","import { createStore, combineReducers } from 'redux';\r\nimport budgetReducer from './budgetReducer';\r\nimport expensesReducer from './expensesReducer';\r\nimport { devToolsEnhancer } from 'redux-devtools-extension';\r\nimport balanceReducer from './balanceReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  budget: budgetReducer, // 0\r\n  expenses: expensesReducer, // []\r\n  balance: balanceReducer, // 0\r\n})\r\n\r\nconst store = createStore(rootReducer, devToolsEnhancer());\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport store from './components/redux/store';\nimport { Provider } from 'react-redux';\nimport './styles.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n  , document.getElementById('root'));\n"],"sourceRoot":""}